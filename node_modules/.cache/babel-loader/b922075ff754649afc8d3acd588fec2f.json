{"ast":null,"code":"var _jsxFileName = \"/var/www/html/editor-demo/tool/src/components/TranslationTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Pagination from './Pagination.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TranslationTable = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [isActiveRow, setIsActiveRow] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage] = useState(10);\n  useEffect(() => {\n    const getData = () => {\n      fetch(\"http://localhost:4002/employees\", {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json '\n        }\n      }).then(response => {\n        response.json().then(result => {\n          setData(result.rows); // console.log(result.rows);\n        });\n      });\n    };\n\n    getData();\n  }, []);\n\n  const isActive = () => {\n    setIsActiveRow(!isActiveRow);\n  }; // Get current postssetCurrentPage\n\n\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRow = data.slice(indexOfFirstRow, indexOfLastRow); // console.log(\"current row - \" + currentRow);\n  // console.log(data)\n\n  const pageNumbers = [];\n  const x = Math.ceil(totalRows / rowsPerPage);\n  console.log(\"row per page is :\", rowsPerPage);\n\n  for (let i = 1; i <= x; i++) {\n    pageNumbers.push(i);\n  } //change page \n\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  console.log(\"row per page\", rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-page mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex alig-items-center justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" edit-section\",\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            bordered: true,\n            hover: true,\n            className: \"edit-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"English Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Arabic Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: currentRow.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: `segment ${(selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.sentance_id) === item.sentance_id ? 'active' : ''}`,\n                onClick: key => {\n                  setSelectedRow(item); // console.log(item)\n\n                  isActive();\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: `segment-num ${(selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.sentance_id) === item.sentance_id ? 'active-num' : ''}`,\n                  children: data[i].sentance_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: data[i].source_lang\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"target-lang\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      contentEditable: true,\n                      children: data[i].target_lang\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 60\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 55\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 27\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"pagination\",\n            children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => paginate(number),\n                href: \"!#\",\n                className: \"page-link\",\n                children: number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 27\n              }, this)\n            }, number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" suggestion-section ml-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              bordered: true,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"2\",\n                    children: \"Translation Result\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"suggestion\",\n                      children: selectedRow && selectedRow.sugestions\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TranslationTable, \"F0ttyvAMIN73Zp9BYD9U75Ctpz8=\");\n\n_c = TranslationTable;\nexport default TranslationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TranslationTable\");","map":{"version":3,"sources":["/var/www/html/editor-demo/tool/src/components/TranslationTable.js"],"names":["React","useState","useEffect","Table","Pagination","TranslationTable","data","setData","selectedRow","setSelectedRow","isActiveRow","setIsActiveRow","currentPage","setCurrentPage","rowsPerPage","getData","fetch","method","headers","then","response","json","result","rows","isActive","indexOfLastRow","indexOfFirstRow","currentRow","slice","pageNumbers","x","Math","ceil","totalRows","console","log","i","push","paginate","pageNumber","map","item","sentance_id","key","source_lang","target_lang","number","sugestions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Pagination from './Pagination.js';\n\nconst TranslationTable = () => {\n\n  const [data, setData] = useState([]);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [isActiveRow, setIsActiveRow] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage] = useState(10);\n\n  useEffect(() => {\n    const getData = () => {\n      fetch(\"http://localhost:4002/employees\", {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json '\n        }\n      }).then((response) => {\n        response.json().then((result) => {\n          setData(result.rows)\n          // console.log(result.rows);\n        })\n      })\n    }\n\n    getData();\n  }, []);\n\n\n  const isActive = () => {\n    setIsActiveRow(!isActiveRow)\n  }\n\n\n  // Get current postssetCurrentPage\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRow = data.slice(indexOfFirstRow, indexOfLastRow);\n\n  // console.log(\"current row - \" + currentRow);\n  // console.log(data)\n    const pageNumbers = [];\n    const x = Math.ceil(totalRows / rowsPerPage)\n    console.log(\"row per page is :\",rowsPerPage)\n\n    for (let i = 1; i <= x; i++) {\n        pageNumbers.push(i);\n    }\n  //change page \n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  console.log(\"row per page\",rowsPerPage);\n\n\n\n  return (\n    <div className=\"list\">\n      {\n        data ?\n          <div className=\"editor-page mt-5\">\n\n            <div className=\"d-flex alig-items-center justify-content-between\">\n              <div className=\" edit-section\">\n                <Table bordered hover className=\"edit-table\">\n                  <thead>\n                    <tr className=\"\">\n                      <th>#</th>\n                      <th>English Language</th>\n                      <th>Arabic Language</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n\n                    {\n                      currentRow.map((item, i) =>\n                        <tr key={i} className={`segment ${selectedRow?.sentance_id === item.sentance_id ? 'active' : ''}`} onClick={(key) =>\n                          {\n                            setSelectedRow(item);\n                            // console.log(item)\n                            isActive();\n                          }\n                        }\n                        >\n\n                          <td className={`segment-num ${selectedRow?.sentance_id === item.sentance_id ? 'active-num' : ''}`}>{data[i].sentance_id}</td>\n                          <td>{data[i].source_lang}</td>\n                          <td className=\"target-lang\"><div><p contentEditable>{data[i].target_lang}</p></div></td>\n\n                        </tr>\n                      )\n                    }\n\n                  </tbody>\n                </Table>\n                {/* <Pagination rowPerPage={rowsPerPage} totalRows={data.length} paginate={paginate} /> */}\n                <ul className='pagination'>\n                  {pageNumbers.map(number => (\n                      <li key={number} className='page-item'>\n                          <a onClick={() => paginate(number)} href='!#' className='page-link'>\n                              {number}\n                          </a>\n                      </li>\n                  ))}\n              </ul>\n              </div>\n              <div className=\" suggestion-section ml-0\" >\n                <div>\n                  <Table bordered hover >\n                    <thead>\n                      <tr>\n                        <th colSpan=\"2\">Translation Result</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n\n                      <tr>\n                        <td>\n                          <div className=\"suggestion\">{selectedRow && selectedRow.sugestions}</div>\n                        </td>\n                      </tr>\n\n                    </tbody>\n                  </Table>\n                </div>\n              </div>\n            </div>\n          </div>\n          :\n          <p>Loading...</p>\n      }\n\n    </div>\n  )\n\n}\nexport default TranslationTable;\n\n\n\n"]},"metadata":{},"sourceType":"module"}