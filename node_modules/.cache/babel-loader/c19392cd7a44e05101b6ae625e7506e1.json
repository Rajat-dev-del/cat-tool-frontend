{"ast":null,"code":"var _jsxFileName = \"/var/www/html/editor-demo/tool/src/components/TranslationTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Pagination from './Pagination.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default TranslationTable = _s(() => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [isActiveRow, setIsActiveRow] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  useEffect(() => {\n    getData = () => {\n      fetch(\"http://localhost:4002/employees\", {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json '\n        }\n      }).then(response => {\n        response.json().then(result => {\n          setData(result.rows); // console.log(result.rows);\n        });\n      });\n    };\n\n    getData();\n  }, []);\n\n  isActive = () => {\n    setIsActiveRow(prevState => ({\n      isActiveRow: !prevState.isActiveRow\n    }));\n  };\n\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRow = data.slice(indexOfFirstRow, indexOfLastRow); // console.log(\"total row in one page - \" + currentRow);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-page mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex alig-items-center justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" edit-section\",\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            bordered: true,\n            hover: true,\n            className: \"edit-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"English Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Arabic Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: currentRow.map((item, i) => {\n                var _this$state$selectedR, _this$state$selectedR2;\n\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: `segment ${((_this$state$selectedR = this.state.selectedRow) === null || _this$state$selectedR === void 0 ? void 0 : _this$state$selectedR.sentance_id) === item.sentance_id ? 'active' : ''}`,\n                  onClick: key => {\n                    this.setState({\n                      selectedRow: item\n                    }); // console.log(item)\n\n                    this.isActive();\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `segment-num ${((_this$state$selectedR2 = this.state.selectedRow) === null || _this$state$selectedR2 === void 0 ? void 0 : _this$state$selectedR2.sentance_id) === item.sentance_id ? 'active-num' : ''}`,\n                    children: data[i].sentance_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: data[i].source_lang\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"target-lang\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        contentEditable: true,\n                        children: data[i].target_lang\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 60\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 55\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            rowPerPage: this.state.rowsPerPage,\n            totalRow: data.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" suggestion-section ml-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              bordered: true,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"2\",\n                    children: \"Translation Result\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"suggestion\",\n                      children: this.state.selectedRow && this.state.selectedRow.sugestions\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}, \"4ZgLxF0gHVieUrIyeJyssL5s8hQ=\");","map":{"version":3,"sources":["/var/www/html/editor-demo/tool/src/components/TranslationTable.js"],"names":["React","useState","useEffect","Table","Pagination","TranslationTable","data","setData","selectedRow","setSelectedRow","isActiveRow","setIsActiveRow","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","getData","fetch","method","headers","then","response","json","result","rows","isActive","prevState","indexOfLastRow","indexOfFirstRow","currentRow","slice","map","item","i","state","sentance_id","key","setState","source_lang","target_lang","length","sugestions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,eAAeC,gBAAgB,MAAG,MAAM;AAAA;;AAGtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,GAAE,MAAK;AACZC,MAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvCC,QAAAA,MAAM,EAAE,KAD+B;AAEvCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAF8B,OAApC,CAAL,CAMGC,IANH,CAMSC,QAAD,IAAc;AACpBA,QAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,MAAD,IAAY;AAC/BhB,UAAAA,OAAO,CAACgB,MAAM,CAACC,IAAR,CAAP,CAD+B,CAE/B;AACD,SAHD;AAID,OAXD;AAYD,KAbD;;AAeAR,IAAAA,OAAO;AACR,GAjBQ,EAiBN,EAjBM,CAAT;;AAoBAS,EAAAA,QAAQ,GAAG,MAAM;AACfd,IAAAA,cAAc,CAACe,SAAS,KAAK;AAC3BhB,MAAAA,WAAW,EAAE,CAACgB,SAAS,CAAChB;AADG,KAAL,CAAV,CAAd;AAGD,GAJD;;AAMA,QAAMiB,cAAc,GAAGf,WAAW,GAAGE,WAArC;AACA,QAAMc,eAAe,GAAGD,cAAc,GAAGb,WAAzC;AACA,QAAMe,UAAU,GAAGvB,IAAI,CAACwB,KAAL,CAAWF,eAAX,EAA4BD,cAA5B,CAAnB,CArCsC,CAsCtC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cAEIrB,IAAI,gBACF;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BAEE;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,QAAQ,MAAf;AAAgB,YAAA,KAAK,MAArB;AAAsB,YAAA,SAAS,EAAC,YAAhC;AAAA,oCACE;AAAA,qCACE;AAAI,gBAAA,SAAS,EAAC,EAAd;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAA,wBAGIuB,UAAU,CAACE,GAAX,CAAe,CAACC,IAAD,EAAOC,CAAP;AAAA;;AAAA,oCACb;AAAY,kBAAA,SAAS,EAAG,WAAU,+BAAKC,KAAL,CAAW1B,WAAX,gFAAwB2B,WAAxB,MAAwCH,IAAI,CAACG,WAA7C,GAA2D,QAA3D,GAAsE,EAAG,EAA3G;AAA8G,kBAAA,OAAO,EAAGC,GAAD,IAAS;AAE9H,yBAAKC,QAAL,CAAc;AAAE7B,sBAAAA,WAAW,EAAEwB;AAAf,qBAAd,EAF8H,CAG9H;;AACA,yBAAKP,QAAL;AACD,mBALD;AAAA,0CASE;AAAI,oBAAA,SAAS,EAAG,eAAc,gCAAKS,KAAL,CAAW1B,WAAX,kFAAwB2B,WAAxB,MAAwCH,IAAI,CAACG,WAA7C,GAA2D,YAA3D,GAA0E,EAAG,EAA3G;AAAA,8BAA+G7B,IAAI,CAAC2B,CAAD,CAAJ,CAAQE;AAAvH;AAAA;AAAA;AAAA;AAAA,0BATF,eAUE;AAAA,8BAAK7B,IAAI,CAAC2B,CAAD,CAAJ,CAAQK;AAAb;AAAA;AAAA;AAAA;AAAA,0BAVF,eAWE;AAAI,oBAAA,SAAS,EAAC,aAAd;AAAA,2CAA4B;AAAA,6CAAK;AAAG,wBAAA,eAAe,MAAlB;AAAA,kCAAoBhC,IAAI,CAAC2B,CAAD,CAAJ,CAAQM;AAA5B;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,0BAXF;AAAA,mBAASN,CAAT;AAAA;AAAA;AAAA;AAAA,wBADa;AAAA,eAAf;AAHJ;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAgCE,QAAC,UAAD;AAAY,YAAA,UAAU,EAAE,KAAKC,KAAL,CAAWpB,WAAnC;AAAgD,YAAA,QAAQ,EAAER,IAAI,CAACkC;AAA/D;AAAA;AAAA;AAAA;AAAA,kBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAmCE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACE;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,QAAQ,MAAf;AAAgB,cAAA,KAAK,MAArB;AAAA,sCACE;AAAA,uCACE;AAAA,yCACE;AAAI,oBAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAME;AAAA,uCAEE;AAAA,0CACE;AAAA,2CAAI;AAAK,sBAAA,SAAS,EAAC,YAAf;AAAA,gCAA6B,KAAKN,KAAL,CAAW1B,WAAX,IAA0B,KAAK0B,KAAL,CAAW1B,WAAX,CAAuBiC;AAA9E;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADE,gBA4DF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9DN;AAAA;AAAA;AAAA;AAAA,UADF;AAqED,CA7G8B,iCAA/B","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Pagination from './Pagination.js';\n\nexport default TranslationTable = () => {\n\n\n  const [data, setData] = useState([]);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [isActiveRow, setIsActiveRow] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  useEffect(() => {\n    getData =()=> {\n      fetch(\"http://localhost:4002/employees\", {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json '\n        }\n      }).then((response) => {\n        response.json().then((result) => {\n          setData(result.rows)\n          // console.log(result.rows);\n        })\n      })\n    }\n\n    getData();\n  }, []);\n\n\n  isActive = () => {\n    setIsActiveRow(prevState => ({\n      isActiveRow: !prevState.isActiveRow\n    }))\n  }\n\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRow = data.slice(indexOfFirstRow, indexOfLastRow);\n  // console.log(\"total row in one page - \" + currentRow);\n\n  return (\n    <div className=\"list\">\n      {\n        data ?\n          <div className=\"editor-page mt-5\">\n\n            <div className=\"d-flex alig-items-center justify-content-between\">\n              <div className=\" edit-section\">\n                <Table bordered hover className=\"edit-table\">\n                  <thead>\n                    <tr className=\"\">\n                      <th>#</th>\n                      <th>English Language</th>\n                      <th>Arabic Language</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n\n                    {\n                      currentRow.map((item, i) =>\n                        <tr key={i} className={`segment ${this.state.selectedRow?.sentance_id === item.sentance_id ? 'active' : ''}`} onClick={(key) => {\n\n                          this.setState({ selectedRow: item });\n                          // console.log(item)\n                          this.isActive();\n                        }\n                        }\n                        >\n\n                          <td className={`segment-num ${this.state.selectedRow?.sentance_id === item.sentance_id ? 'active-num' : ''}`}>{data[i].sentance_id}</td>\n                          <td>{data[i].source_lang}</td>\n                          <td className=\"target-lang\"><div><p contentEditable>{data[i].target_lang}</p></div></td>\n\n                        </tr>\n                      )\n                    }\n\n                  </tbody>\n                </Table>\n                <Pagination rowPerPage={this.state.rowsPerPage} totalRow={data.length} />\n              </div>\n              <div className=\" suggestion-section ml-0\" >\n                <div>\n                  <Table bordered hover >\n                    <thead>\n                      <tr>\n                        <th colSpan=\"2\">Translation Result</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n\n                      <tr>\n                        <td><div className=\"suggestion\">{this.state.selectedRow && this.state.selectedRow.sugestions}</div></td>\n                        <td></td>\n                      </tr>\n\n                    </tbody>\n                  </Table>\n                </div>\n              </div>\n            </div>\n          </div>\n          :\n          <p>Loading...</p>\n      }\n\n    </div>\n  )\n\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}