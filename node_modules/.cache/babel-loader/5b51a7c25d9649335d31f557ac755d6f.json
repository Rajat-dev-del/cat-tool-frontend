{"ast":null,"code":"var _jsxFileName = \"/var/www/html/editor-demo/tool/src/components/Pagination.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pagination({\n  rowsPerPage,\n  totalRow,\n  paginate\n}) {\n  const pageNumber = [];\n  const x = Math.ceil(totalRow / rowsPerPage);\n  console.log(rowsPerPage);\n\n  for (let i = 1; i <= x; i++) {\n    pageNumber.push(i);\n  }\n\n  console.log(\"total page is : \", pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: pageNumber.map(num => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => paginate(number),\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/var/www/html/editor-demo/tool/src/components/Pagination.js"],"names":["React","Pagination","rowsPerPage","totalRow","paginate","pageNumber","x","Math","ceil","console","log","i","push","map","num","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAApB,EAAyD;AACpE,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUL,QAAQ,GAAGD,WAArB,CAAV;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;;AAEA,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAGL,CAApB,EAAwBK,CAAC,EAAzB,EAA6B;AACzBN,IAAAA,UAAU,CAACO,IAAX,CAAgBD,CAAhB;AACH;;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BL,UAA/B;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cAEQA,UAAU,CAACQ,GAAX,CAAeC,GAAG,iBACd;AAAc,MAAA,OAAO,EAAE,MAAMV,QAAQ,CAACW,MAAD,CAArC;AAAA,gBACKD;AADL,OAASA,GAAT;AAAA;AAAA;AAAA;AAAA,YADJ;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;KAtBuBb,U","sourcesContent":["import React from 'react'\n\nexport default function Pagination({ rowsPerPage, totalRow ,paginate }) {\n    const pageNumber = [];\n    const x = Math.ceil(totalRow / rowsPerPage)\n    console.log(rowsPerPage)\n\n    for (let i = 1; i <=x ; i++) {\n        pageNumber.push(i);\n    }\n     console.log(\"total page is : \",pageNumber);\n\n    return (\n        <div className=\"pagination\">\n            {\n                pageNumber.map(num => (\n                    <li key={num} onClick={() => paginate(number)}>\n                        {num}\n                    </li>\n                ))\n            }\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}