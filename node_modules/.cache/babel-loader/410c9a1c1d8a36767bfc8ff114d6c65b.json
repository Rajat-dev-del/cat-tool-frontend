{"ast":null,"code":"var _jsxFileName = \"/var/www/html/editor-demo/tool/src/components/TranslationTable.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RestaurantList extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      data: false,\n      selectedRow: null,\n      isActiveRow: false,\n      currentPage: 1,\n      rowsPerPage: 10\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    fetch(\"http://localhost:4002/employees\", {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json '\n      }\n    }).then(response => {\n      response.json().then(result => {\n        this.setState({\n          data: result.rows\n        });\n        console.log(result.rows);\n      });\n    });\n  }\n\n  isActive() {\n    this.setState(prevState => ({\n      isActiveRow: !prevState.isActiveRow\n    }));\n  }\n\n  render() {\n    const data = this.state.data; // console.log(\"result-  \", data);\n    //     x = 1-10\n    // \n\n    const indexOfLastRow = currentPage * rowsPerPage;\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n    const currentRow = data.slice(indexOfFirstRow, indexOfLastRow);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: data ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-page mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex alig-items-center justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" edit-section\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              bordered: true,\n              hover: true,\n              className: \"edit-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"\",\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"English Language\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Arabic Language\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: data.map((item, i) => {\n                  var _this$state$selectedR, _this$state$selectedR2;\n\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: `segment ${((_this$state$selectedR = this.state.selectedRow) === null || _this$state$selectedR === void 0 ? void 0 : _this$state$selectedR.sentance_id) === item.sentance_id ? 'active' : ''}`,\n                    onClick: key => {\n                      this.setState({\n                        selectedRow: item\n                      });\n                      console.log(item);\n                      this.isActive();\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: `segment-num ${((_this$state$selectedR2 = this.state.selectedRow) === null || _this$state$selectedR2 === void 0 ? void 0 : _this$state$selectedR2.sentance_id) === item.sentance_id ? 'active-num' : ''}`,\n                      children: data[i].sentance_id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: data[i].source_lang\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"target-lang\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        contentEditable: true,\n                        children: data[i].target_lang\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 55\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 27\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" suggestion-section ml-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                bordered: true,\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"th\", {\n                      colSpan: \"2\",\n                      children: \"Translation Result\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"suggestion\",\n                        children: this.state.selectedRow && this.state.selectedRow.sugestions\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/var/www/html/editor-demo/tool/src/components/TranslationTable.js"],"names":["React","Component","Table","RestaurantList","constructor","props","state","data","selectedRow","isActiveRow","currentPage","rowsPerPage","componentDidMount","getData","fetch","method","headers","then","response","json","result","setState","rows","console","log","isActive","prevState","render","indexOfLastRow","indexOfFirstRow","currentRow","slice","map","item","i","sentance_id","key","source_lang","target_lang","sugestions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from 'react-bootstrap/Table'\n\n\nexport default class RestaurantList extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      data: false,\n      selectedRow: null,\n      isActiveRow:false,\n      currentPage:1,\n      rowsPerPage:10,\n\n\n    }\n  }\n  componentDidMount() {\n    this.getData();\n  }\n  getData() {\n    fetch(\"http://localhost:4002/employees\", {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json '\n      }\n    }).then((response) => {\n      response.json().then((result) => {\n        this.setState({ data: result.rows })\n        console.log(result.rows);\n      })\n    })\n  }\n\n  isActive() {\n    this.setState(prevState => ({\n      isActiveRow:!prevState.isActiveRow\n    }))\n  }\n\n\n  \n\n\n  render() {\n    const data = this.state.data;\n    // console.log(\"result-  \", data);\n    //     x = 1-10\n    // \n    const indexOfLastRow = currentPage * rowsPerPage;\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n    const currentRow = data.slice(indexOfFirstRow,indexOfLastRow);\n\n    return (\n      <div className=\"list\">\n        {\n          data ?\n            <div className=\"editor-page mt-5\">\n              \n              <div className=\"d-flex alig-items-center justify-content-between\">\n                <div className=\" edit-section\">\n                  <Table  bordered hover className=\"edit-table\">\n                    <thead>\n                      <tr className=\"\">\n                        <th>#</th>\n                        <th>English Language</th>\n                        <th>Arabic Language</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      \n                    {\n                      data.map((item, i) =>\n                        <tr key={i} className={`segment ${this.state.selectedRow?.sentance_id === item.sentance_id ? 'active' : ''}`} onClick={(key) => {\n                          this.setState({ selectedRow:item});\n                          console.log(item)\n                          this.isActive();\n                        }\n                        } \n                        >\n\n                          <td className={`segment-num ${this.state.selectedRow?.sentance_id === item.sentance_id ? 'active-num' : ''}`}>{data[i].sentance_id}</td>\n                          <td>{data[i].source_lang}</td>\n                          <td className=\"target-lang\"><div contentEditable>{data[i].target_lang}</div></td>\n\n                        </tr>\n                      )\n                    }\n\n                    </tbody>\n                  </Table>\n                </div>\n                <div className=\" suggestion-section ml-0\" >\n                  <div>\n                    <Table  bordered hover >\n                      <thead>\n                        <tr>\n                          <th colSpan=\"2\">Translation Result</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n\n                        <tr>\n                          <td><div className=\"suggestion\">{this.state.selectedRow && this.state.selectedRow.sugestions}</div></td>\n                          <td></td>\n                        </tr>\n\n                      </tbody>\n                    </Table>\n                  </div>\n                </div>\n              </div>\n            </div>\n            :\n            <p>Loading...</p>\n        }\n\n\n      </div>\n    )\n  }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}