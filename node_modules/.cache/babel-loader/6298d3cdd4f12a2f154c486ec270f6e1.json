{"ast":null,"code":"var _jsxFileName = \"/var/www/html/editor-demo/tool/src/components/TranslationTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Pagination from './Pagination.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TranslationTable = props => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [isActiveRow, setIsActiveRow] = useState(false);\n  const [currentPage, setCurrentPage] = useState(2);\n  const [rowsPerPage] = useState(10);\n  const [textInput, setTextInput] = useState(\"\");\n  console.log(rowsPerPage);\n  useEffect(() => {\n    const getData = () => {\n      fetch(\"http://localhost:4003/employees\", {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json '\n        }\n      }).then(response => {\n        response.json().then(result => {\n          setData(result.rows); // console.log(result.rows);\n        });\n      });\n    };\n\n    getData();\n  }, []);\n\n  const isActive = () => {\n    setIsActiveRow(!isActiveRow);\n  }; // Get current postssetCurrentPage\n\n\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRow = data.slice(indexOfFirstRow, indexOfLastRow); // console.log(\"current row - \" + currentRow);\n  // console.log(data)\n\n  const pageNumbers = [];\n  const totalRows = data.length;\n  const totalPages = Math.ceil(totalRows / rowsPerPage); // console.log(\"row per page is :\", rowsPerPage)\n  // console.log(\"total row is :\", totalRows)\n\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  } //change page \n\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  }; // console.log(paginate)\n\n\n  let previous = () => {\n    if (currentPage < totalRows && currentPage > 1) {\n      setCurrentPage(currentPage - 1); // console.log(currentPage)\n    }\n  };\n\n  let next = () => {\n    if (currentPage < totalRows && currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handleClick = () => {\n    console.log(textInput);\n    fetch(\"http://localhost:4003/employees/\" + selectedRow.sentance_id, {\n      method: 'PATCH',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json '\n      },\n      body: JSON.stringify({\n        \"sentance_id\": selectedRow.sentance_id,\n        \"source_lang\": selectedRow.source_lang,\n        \"target_lang\": textInput,\n        \"sugestions\": selectedRow.sugestions,\n        \"page_no\": selectedRow.page_no\n      })\n    }).then(res => {\n      res.json().then(result => {\n        console.log(result);\n      });\n    });\n  };\n\n  const handleChange = event => {\n    setTextInput(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-page mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex alig-items-center justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" edit-section\",\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            bordered: true,\n            hover: true,\n            className: \"edit-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"English Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Arabic Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: currentRow.map((item, i) => {\n                var _this$state$selectedR, _this$state$selectedR2;\n\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: `segment ${((_this$state$selectedR = this.state.selectedRow) === null || _this$state$selectedR === void 0 ? void 0 : _this$state$selectedR.sentance_id) === item.sentance_id ? 'active' : ''}`,\n                  onClick: key => {\n                    this.setState({\n                      selectedRow: item\n                    }); // console.log(item)\n\n                    this.isActive();\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `segment-num ${((_this$state$selectedR2 = this.state.selectedRow) === null || _this$state$selectedR2 === void 0 ? void 0 : _this$state$selectedR2.sentance_id) === item.sentance_id ? 'active-num' : ''}`,\n                    children: data[i].sentance_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: data[i].source_lang\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"target-lang\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        contentEditable: true,\n                        children: data[i].target_lang\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 137,\n                        columnNumber: 60\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 55\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            rowPerPage: this.state.rowsPerPage,\n            totalRow: data.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" suggestion-section ml-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              bordered: true,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"2\",\n                    children: \"Translation Result\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"suggestion\",\n                      children: this.state.selectedRow && this.state.selectedRow.sugestions\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TranslationTable, \"j5jyueL3ncsNxXMAXt06kQ98HZs=\");\n\n_c = TranslationTable;\nexport default TranslationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TranslationTable\");","map":{"version":3,"sources":["/var/www/html/editor-demo/tool/src/components/TranslationTable.js"],"names":["React","Component","Table","Pagination","TranslationTable","props","data","setData","useState","selectedRow","setSelectedRow","isActiveRow","setIsActiveRow","currentPage","setCurrentPage","rowsPerPage","textInput","setTextInput","console","log","useEffect","getData","fetch","method","headers","then","response","json","result","rows","isActive","indexOfLastRow","indexOfFirstRow","currentRow","slice","pageNumbers","totalRows","length","totalPages","Math","ceil","i","push","paginate","pageNumber","previous","next","handleClick","sentance_id","body","JSON","stringify","source_lang","sugestions","page_no","res","handleChange","event","target","value","map","item","state","key","setState","target_lang"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport Pagination from './Pagination.js';\n\n const TranslationTable =(props)=> {\n  const [data, setData] = useState([]);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [isActiveRow, setIsActiveRow] = useState(false);\n  const [currentPage, setCurrentPage] = useState(2);\n  const [rowsPerPage] = useState(10);\n  const [textInput, setTextInput] = useState(\"\");\n  \n  console.log(rowsPerPage)\n\n  useEffect(() => {\n    const getData = () => {\n      fetch(\"http://localhost:4003/employees\", {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json '\n        }\n      }).then((response) => {\n        response.json().then((result) => {\n          setData(result.rows)\n          // console.log(result.rows);\n        })\n      })\n    }\n\n    getData();\n  }, []);\n\n\n  const isActive = () => {\n    setIsActiveRow(!isActiveRow)\n  }\n\n\n  // Get current postssetCurrentPage\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentRow = data.slice(indexOfFirstRow, indexOfLastRow);\n\n  // console.log(\"current row - \" + currentRow);\n  // console.log(data)\n\n  const pageNumbers = [];\n  const totalRows = data.length;\n  const totalPages = Math.ceil(totalRows / rowsPerPage)\n\n  // console.log(\"row per page is :\", rowsPerPage)\n  // console.log(\"total row is :\", totalRows)\n\n\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n  //change page \n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  }\n  // console.log(paginate)\n\n\n  let previous = () => {\n    if (currentPage < totalRows && currentPage > 1) {\n      setCurrentPage(currentPage - 1)\n      // console.log(currentPage)\n    } \n  }\n\n  let next = () => {\n    if (currentPage < totalRows && currentPage < totalPages) {\n      setCurrentPage(currentPage + 1)\n\n    }\n  }\n  const handleClick = () => {\n    console.log(textInput);\n    fetch(\"http://localhost:4003/employees/\"+ selectedRow.sentance_id, {\n      method: 'PATCH',\n      \n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json '\n      },\n      body: JSON.stringify({\n        \"sentance_id\": selectedRow.sentance_id,\n        \"source_lang\": selectedRow.source_lang,\n        \"target_lang\": textInput,\n        \"sugestions\": selectedRow.sugestions,\n        \"page_no\": selectedRow.page_no\n      }),\n     \n      }).then((res)=>{\n        res.json().then((result)=>{\n          console.log(result)\n        })\n      })\n  }\n\n  const handleChange = (event) => {\n    setTextInput(event.target.value);\n  }\n    return (\n      <div className=\"list\">\n        {\n          data ?\n            <div className=\"editor-page mt-5\">\n              \n              <div className=\"d-flex alig-items-center justify-content-between\">\n                <div className=\" edit-section\">\n                  <Table  bordered hover className=\"edit-table\">\n                    <thead>\n                      <tr className=\"\">\n                        <th>#</th>\n                        <th>English Language</th>\n                        <th>Arabic Language</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      \n                    {\n                      currentRow.map((item, i) =>\n                        <tr key={i} className={`segment ${this.state.selectedRow?.sentance_id === item.sentance_id ? 'active' : ''}`} onClick={(key) => {\n                          \n                          this.setState({ selectedRow:item});\n                          // console.log(item)\n                          this.isActive();\n                        }\n                        } \n                        >\n\n                          <td className={`segment-num ${this.state.selectedRow?.sentance_id === item.sentance_id ? 'active-num' : ''}`}>{data[i].sentance_id}</td>\n                          <td>{data[i].source_lang}</td>\n                          <td className=\"target-lang\"><div><p contentEditable>{data[i].target_lang}</p></div></td>\n\n                        </tr>\n                      )\n                    }\n\n                    </tbody>\n                  </Table>\n                    <Pagination rowPerPage={this.state.rowsPerPage} totalRow={data.length}/>\n                </div>\n                <div className=\" suggestion-section ml-0\" >\n                  <div>\n                    <Table  bordered hover >\n                      <thead>\n                        <tr>\n                          <th colSpan=\"2\">Translation Result</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n\n                        <tr>\n                          <td><div className=\"suggestion\">{this.state.selectedRow && this.state.selectedRow.sugestions}</div></td>\n                          <td></td>\n                        </tr>\n\n                      </tbody>\n                    </Table>\n                  </div>\n                </div>\n              </div>\n            </div>\n            :\n            <p>Loading...</p>\n        }\n      </div>\n    )\n  }\nexport default TranslationTable;"]},"metadata":{},"sourceType":"module"}